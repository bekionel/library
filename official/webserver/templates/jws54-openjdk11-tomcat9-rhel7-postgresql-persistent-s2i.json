{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "jws54-openjdk11-tomcat9-rhel7-postgresql-persistent-s2i",
		"creationTimestamp": null,
		"annotations": {
			"description": "Application template for JWS PostgreSQL applications with persistent storage built using S2I.",
			"iconClass": "icon-rh-tomcat",
			"openshift.io/display-name": "JBoss Web Server 5.4 Apache Tomcat 9 OpenJDK11 on RHEL7 + PostgreSQL (with https)",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "tomcat,tomcat9,java,jboss",
			"version": "1.0"
		}
	},
	"message": "A new persistent JWS application for Apache Tomcat 9 (using PostgreSQL) has been created in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The web server's http port.",
					"service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"port": 8080,
						"targetPort": 8080
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The web server's https port.",
					"service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "secure-${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The database server's port."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-postgresql"
			},
			"spec": {
				"ports": [
					{
						"port": 5432,
						"targetPort": 5432
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's http service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTP}",
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "secure-${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTPS}",
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "secure-${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "BuildConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}:latest"
					}
				},
				"source": {
					"contextDir": "${CONTEXT_DIR}",
					"git": {
						"ref": "${SOURCE_REPOSITORY_REF}",
						"uri": "${SOURCE_REPOSITORY_URL}"
					},
					"type": "Git"
				},
				"strategy": {
					"sourceStrategy": {
						"env": [
							{
								"name": "MAVEN_MIRROR_URL",
								"value": "${MAVEN_MIRROR_URL}"
							},
							{
								"name": "ARTIFACT_DIR",
								"value": "${ARTIFACT_DIR}"
							}
						],
						"forcePull": true,
						"from": {
							"kind": "ImageStreamTag",
							"name": "jboss-webserver54-openjdk11-tomcat9-openshift-rhel7:1.0",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						}
					},
					"type": "Source"
				},
				"triggers": [
					{
						"github": {
							"secret": "${GITHUB_WEBHOOK_SECRET}"
						},
						"type": "GitHub"
					},
					{
						"generic": {
							"secret": "${GENERIC_WEBHOOK_SECRET}"
						},
						"type": "Generic"
					},
					{
						"imageChange": {},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}"
						},
						"name": "${APPLICATION_NAME}"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "DB_SERVICE_PREFIX_MAPPING",
										"value": "${APPLICATION_NAME}-postgresql=DB"
									},
									{
										"name": "DB_JNDI",
										"value": "${DB_JNDI}"
									},
									{
										"name": "DB_USERNAME",
										"value": "${DB_USERNAME}"
									},
									{
										"name": "DB_PASSWORD",
										"value": "${DB_PASSWORD}"
									},
									{
										"name": "DB_DATABASE",
										"value": "${DB_DATABASE}"
									},
									{
										"name": "DB_MIN_POOL_SIZE",
										"value": "${DB_MIN_POOL_SIZE}"
									},
									{
										"name": "DB_MAX_POOL_SIZE",
										"value": "${DB_MAX_POOL_SIZE}"
									},
									{
										"name": "DB_TX_ISOLATION",
										"value": "${DB_TX_ISOLATION}"
									},
									{
										"name": "JWS_HTTPS_CERTIFICATE_DIR",
										"value": "/etc/jws-secret-volume"
									},
									{
										"name": "JWS_HTTPS_CERTIFICATE",
										"value": "${JWS_HTTPS_CERTIFICATE}"
									},
									{
										"name": "JWS_HTTPS_CERTIFICATE_KEY",
										"value": "${JWS_HTTPS_CERTIFICATE_KEY}"
									},
									{
										"name": "JWS_HTTPS_CERTIFICATE_PASSWORD",
										"value": "${JWS_HTTPS_CERTIFICATE_PASSWORD}"
									},
									{
										"name": "JWS_ADMIN_USERNAME",
										"value": "${JWS_ADMIN_USERNAME}"
									},
									{
										"name": "JWS_ADMIN_PASSWORD",
										"value": "${JWS_ADMIN_PASSWORD}"
									}
								],
								"image": "${APPLICATION_NAME}",
								"imagePullPolicy": "Always",
								"name": "${APPLICATION_NAME}",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"curl --noproxy '*' -is 'http://localhost:8080/health' | grep -iq '\"status\": \"UP\"'"
										]
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/jws-secret-volume",
										"name": "jws-certificate-volume",
										"readOnly": true
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "jws-certificate-volume",
								"secret": {
									"secretName": "${JWS_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}:latest"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-postgresql"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}-postgresql"
						},
						"name": "${APPLICATION_NAME}-postgresql"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "POSTGRESQL_USER",
										"value": "${DB_USERNAME}"
									},
									{
										"name": "POSTGRESQL_PASSWORD",
										"value": "${DB_PASSWORD}"
									},
									{
										"name": "POSTGRESQL_DATABASE",
										"value": "${DB_DATABASE}"
									},
									{
										"name": "POSTGRESQL_MAX_CONNECTIONS",
										"value": "${POSTGRESQL_MAX_CONNECTIONS}"
									},
									{
										"name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
										"value": "${POSTGRESQL_MAX_CONNECTIONS}"
									},
									{
										"name": "POSTGRESQL_SHARED_BUFFERS",
										"value": "${POSTGRESQL_SHARED_BUFFERS}"
									}
								],
								"image": "postgresql",
								"livenessProbe": {
									"initialDelaySeconds": 30,
									"tcpSocket": {
										"port": 5432
									},
									"timeoutSeconds": 1
								},
								"name": "${APPLICATION_NAME}-postgresql",
								"ports": [
									{
										"containerPort": 5432,
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/sh",
											"-i",
											"-c",
											"psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
										]
									},
									"initialDelaySeconds": 5,
									"timeoutSeconds": 1
								},
								"volumeMounts": [
									{
										"mountPath": "/var/lib/pgsql/data",
										"name": "${APPLICATION_NAME}-postgresql-pvol"
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "${APPLICATION_NAME}-postgresql-pvol",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-postgresql-claim"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-postgresql"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-postgresql-claim"
			},
			"spec": {
				"accessModes": [
					"ReadWriteOnce"
				],
				"resources": {
					"requests": {
						"storage": "${VOLUME_CAPACITY}"
					}
				}
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "jws-app",
			"required": true
		},
		{
			"name": "HOSTNAME_HTTP",
			"displayName": "Custom http Route Hostname",
			"description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "HOSTNAME_HTTPS",
			"displayName": "Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "SOURCE_REPOSITORY_URL",
			"displayName": "Git Repository URL",
			"description": "Git source URI for application",
			"value": "https://github.com/jboss-openshift/openshift-quickstarts",
			"required": true
		},
		{
			"name": "SOURCE_REPOSITORY_REF",
			"displayName": "Git Reference",
			"description": "Git branch/tag reference",
			"value": "1.2"
		},
		{
			"name": "CONTEXT_DIR",
			"displayName": "Context Directory",
			"description": "Path within Git project to build; empty for root project directory.",
			"value": "todolist/todolist-jdbc"
		},
		{
			"name": "DB_JNDI",
			"displayName": "Database JNDI Name",
			"description": "Database JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS",
			"value": "jboss/datasources/defaultDS"
		},
		{
			"name": "DB_DATABASE",
			"displayName": "Database Name",
			"description": "Database name",
			"value": "root",
			"required": true
		},
		{
			"name": "VOLUME_CAPACITY",
			"displayName": "Database Volume Capacity",
			"description": "Size of persistent storage for database volume.",
			"value": "1Gi",
			"required": true
		},
		{
			"name": "JWS_HTTPS_SECRET",
			"displayName": "Secret Name",
			"description": "The name of the secret containing the certificate files",
			"value": "jws-app-secret",
			"required": true
		},
		{
			"name": "JWS_HTTPS_CERTIFICATE",
			"displayName": "Certificate Name",
			"description": "The name of the certificate file within the secret",
			"value": "server.crt"
		},
		{
			"name": "JWS_HTTPS_CERTIFICATE_KEY",
			"displayName": "Certificate Key Name",
			"description": "The name of the certificate key file within the secret",
			"value": "server.key"
		},
		{
			"name": "JWS_HTTPS_CERTIFICATE_PASSWORD",
			"displayName": "Certificate Password",
			"description": "The certificate password"
		},
		{
			"name": "DB_MIN_POOL_SIZE",
			"displayName": "Datasource Minimum Pool Size",
			"description": "Sets xa-pool/min-pool-size for the configured datasource."
		},
		{
			"name": "DB_MAX_POOL_SIZE",
			"displayName": "Datasource Maximum Pool Size",
			"description": "Sets xa-pool/max-pool-size for the configured datasource."
		},
		{
			"name": "DB_TX_ISOLATION",
			"displayName": "Datasource Transaction Isolation",
			"description": "Sets transaction-isolation for the configured datasource."
		},
		{
			"name": "POSTGRESQL_MAX_CONNECTIONS",
			"displayName": "PostgreSQL Maximum number of connections",
			"description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions."
		},
		{
			"name": "POSTGRESQL_SHARED_BUFFERS",
			"displayName": "PostgreSQL Shared Buffers",
			"description": "Configures how much memory is dedicated to PostgreSQL for caching data."
		},
		{
			"name": "DB_USERNAME",
			"displayName": "Database Username",
			"description": "Database user name",
			"generate": "expression",
			"from": "user[a-zA-Z0-9]{3}",
			"required": true
		},
		{
			"name": "DB_PASSWORD",
			"displayName": "Database Password",
			"description": "Database user password",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "JWS_ADMIN_USERNAME",
			"displayName": "JWS Admin Username",
			"description": "JWS Admin User",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "JWS_ADMIN_PASSWORD",
			"displayName": "JWS Admin Password",
			"description": "JWS Admin Password",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GITHUB_WEBHOOK_SECRET",
			"displayName": "Github Webhook Secret",
			"description": "GitHub trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GENERIC_WEBHOOK_SECRET",
			"displayName": "Generic Webhook Secret",
			"description": "Generic build trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror to use for S2I builds"
		},
		{
			"name": "ARTIFACT_DIR",
			"description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied."
		},
		{
			"name": "POSTGRESQL_IMAGE_STREAM_TAG",
			"displayName": "PostgreSQL Image Stream Tag",
			"description": "The tag to use for the \"postgresql\" image stream.  Typically, this aligns with the major.minor version of PostgreSQL.",
			"value": "9.5",
			"required": true
		}
	],
	"labels": {
		"jws54jdk11el7": "1.0",
		"template": "jws54-openjdk11-tomcat9-rhel7-postgresql-persistent-s2i"
	}
}